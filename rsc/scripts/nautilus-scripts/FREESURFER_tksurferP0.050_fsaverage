#!/bin/bash
# tksurfer wrapper for Nautilus.

# Written by Andreas Heckel
# University of Heidelberg
# heckelandreas@googlemail.com
# https://github.com/ahheckel
# 02/26/2013

if [ x"$logP1" = "x" ] ; then logP1=1.3010 ; fi
if [ x"$logP2" = "x" ] ; then logP2=2 ; fi
if [ x"$flatpatch" = "x" ] ; then flatpatch=0 ; fi

FREESURFER_HOME=/usr/local/freesurfer
source $FREESURFER_HOME/SetUpFreeSurfer.sh

# add tcl-scripting commands
echo "set gaLinkedVars(redrawlockflag) 1" > /tmp/$$tmp.tcl
echo "SendLinkedVarGroup redrawlock" >> /tmp/$$tmp.tcl
if [ $flatpatch -eq 1 ] ; then
  echo "scale_brain 0.75" >> /tmp/$$tmp.tcl
fi

# parse arguments
vollist_lh=""   ; vollist_rh=""
surflist_lh=""  ; surflist_rh=""
overlist_lh=""  ; overlist_rh=""
annotlist_lh="" ; annotlist_rh=""
labels_lh=""    ; labels_rh=""
lastfile=""
for i in $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS ; do
  niigz=$(echo $i | grep "\.nii.gz$" | wc -l)
  nii=$(echo $i | grep "\.nii$" | wc -l)
  mgh=$(echo $i | grep "\.mgh$" | wc -l)
  mgz=$(echo $i | grep "\.mgz$" | wc -l)
  
  label=$(echo $i | grep "\.label$" | wc -l)  
  annot=$(echo $i | grep "\.annot$" | wc -l)
  
  sig=$(echo $(basename $i) | grep "^sig\.mgh$" | wc -l)
  F=$(echo $(basename $i) | grep "^F\.mgh$" | wc -l)
  gamma=$(echo $(basename $i) | grep "^gamma\.mgh$" | wc -l)
  gammavar=$(echo $(basename $i) | grep "^gammavar\.mgh$" | wc -l)
  cnr=$(echo $(basename $i) | grep "^cnr\.mgh$" | wc -l)
  
  # left or right hemisphere ?
  lh=0 ; rh=0
  hemi="$(echo $(basename $i) | cut -d . -f 1)"
  if [ "$hemi" = "lh" ] ; then
    lh=1
  elif [ "$hemi" = "rh" ] ; then
    rh=1
  fi
  _dir="$i"
  while [ $lh -eq 0 -a $rh -eq 0 ] ; do
    _dir=$(dirname $_dir) ; if [ "$_dir" = "$(dirname $_dir)" ] ; then break ; fi
    _dirname=$(basename $_dir)
    _hemi="$(basename $_dirname)"
    lh=$(echo $_hemi | grep "^lh\."  | wc -l)
    rh=$(echo $_hemi | grep "^rh\."  | wc -l)
    lh=$(echo $_hemi | grep "\.lh\." | wc -l)
    rh=$(echo $_hemi | grep "\.rh\." | wc -l)
    #zenity --info --text="$_dir"
  done
  
  # check
  #zenity --info --text="$rh $lh"
  
  if [ $sig -eq 1 -o $F -eq 1 -o $gamma -eq 1 -o $gammavar -eq 1 -o $cnr -eq 1 ] ; then # file is a statistical map...  
    if [ $lh -eq 1 ] ; then # ...of the left hemi.
      overlist_lh=$overlist_lh" -overlay $i -fminmax $logP1 $logP2"
    elif [ $rh -eq 1 ] ; then # ...of the right hemi.
      overlist_rh=$overlist_rh" -overlay $i -fminmax $logP1 $logP2"
    fi
  elif [ $label -eq 1 ] ; then # file is a label
    echo "labl_load $i" >> /tmp/$$tmp.tcl # tcl-script: load label
  fi
  lastfile=$i
done # end for loop

# define annotation only if no labels selected
if [ $(cat /tmp/$$tmp.tcl | grep labl_load | wc -l) -gt 0 ] ; then
  labelsunder=""
else
  labelsunder="-labels-under"
  annot_lh="-annotation $SUBJECTS_DIR/fsaverage/label/lh.aparc.a2009s.annot $labelsunder"
  annot_rh="-annotation $SUBJECTS_DIR/fsaverage/label/rh.aparc.a2009s.annot $labelsunder"
fi

# execute
if [ $lh -eq 1 ] ; then
  if [ $flatpatch -eq 1 ] ; then patch="-patch $SUBJECTS_DIR/fsaverage/surf/lh.cortex.patch.flat" ; else patch="" ; fi
  xterm -e "tksurfer fsaverage lh inflated $patch -gray $annot_lh $overlist_lh -colscalebarflag 1 -colscaletext 1 -title $lastfile -tcl /tmp/$$tmp.tcl ; rm /tmp/$$tmp.tcl"
elif [ $rh -eq 1 ] ; then
  if [ $flatpatch -eq 1 ] ; then patch="-patch $SUBJECTS_DIR/fsaverage/surf/rh.cortex.patch.flat" ; else patch="" ; fi
  xterm -e "tksurfer fsaverage rh inflated $patch -gray $annot_rh $overlist_rh -colscalebarflag 1 -colscaletext 1 -title $lastfile -tcl /tmp/$$tmp.tcl ; rm /tmp/$$tmp.tcl"
fi
